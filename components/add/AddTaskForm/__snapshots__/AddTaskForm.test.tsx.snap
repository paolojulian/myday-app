// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TESTING AddTaskForm GIVEN the AddTaskForm component WHEN it is rendered THEN should match the snapshot 1`] = `
[
  <RCTScrollView
    directionalLockEnabled={true}
    keyboardShouldPersistTaps="handled"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        style={
          [
            {
              "paddingHorizontal": 16,
            },
            {
              "flex": 1,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
              "gap": 8,
            }
          }
        >
          <View
            style={
              [
                {
                  "position": "relative",
                },
              ]
            }
          >
            <View
              style={
                {
                  "left": 16,
                  "position": "absolute",
                  "top": 12,
                  "zIndex": 1,
                }
              }
            >
              <Text
                aria-label="Title"
                style={
                  [
                    {
                      "fontFamily": "RalewayBold",
                      "fontSize": 16,
                      "fontWeight": 700,
                    },
                    {
                      "color": "#fafafa",
                    },
                    {
                      "fontWeight": 400,
                    },
                    {
                      "color": "#fafafa",
                    },
                  ]
                }
              >
                Title
              </Text>
            </View>
            <TextInput
              autoFocus={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="Buy groceries..."
              placeholderTextColor="#A3A3A3"
              returnKeyLabel="Next"
              returnKeyType="next"
              style={
                [
                  undefined,
                  {
                    "backgroundColor": "#262626",
                    "borderRadius": 8,
                    "borderWidth": 1,
                    "color": "#fafafa",
                    "paddingBottom": 12,
                    "paddingHorizontal": 16,
                    "paddingTop": 36,
                  },
                  {
                    "fontFamily": "RalewayRegular",
                    "fontSize": 16,
                  },
                  {
                    "borderColor": "transparent",
                  },
                ]
              }
              testID="add-task-form-title"
              value=""
            />
          </View>
          <View
            style={
              [
                {
                  "position": "relative",
                },
              ]
            }
          >
            <View
              style={
                {
                  "left": 16,
                  "position": "absolute",
                  "top": 12,
                  "zIndex": 1,
                }
              }
            >
              <Text
                aria-label="Note (Optional)"
                style={
                  [
                    {
                      "fontFamily": "RalewayBold",
                      "fontSize": 16,
                      "fontWeight": 700,
                    },
                    {
                      "color": "#fafafa",
                    },
                    {
                      "fontWeight": 400,
                    },
                    {
                      "color": "#fafafa",
                    },
                  ]
                }
              >
                Note (Optional)
              </Text>
            </View>
            <TextInput
              multiline={true}
              numberOfLines={4}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="e.g.
Dish soap
Soy sauce
Toilet paper
etc.."
              placeholderTextColor="#A3A3A3"
              style={
                [
                  {
                    "minHeight": 120,
                  },
                  {
                    "backgroundColor": "#262626",
                    "borderRadius": 8,
                    "borderWidth": 1,
                    "color": "#fafafa",
                    "paddingBottom": 12,
                    "paddingHorizontal": 16,
                    "paddingTop": 36,
                  },
                  {
                    "fontFamily": "RalewayRegular",
                    "fontSize": 16,
                  },
                  {
                    "borderColor": "transparent",
                  },
                ]
              }
              testID="textField__textInput"
              value=""
            />
          </View>
          <View
            style={
              [
                {
                  "flex": 1,
                  "gap": 8,
                },
                {
                  "flexDirection": "row",
                },
              ]
            }
            testID="easy-date-picker__container"
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "flex": 1,
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  [
                    [
                      {
                        "alignItems": "center",
                        "backgroundColor": "#262626",
                        "borderColor": "#262626",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "flex": 1,
                        "gap": 8,
                        "justifyContent": "center",
                        "padding": 16,
                      },
                    ],
                    {
                      "flexDirection": "column",
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight="25"
                  bbWidth="26"
                  color="#fafafa"
                  fill="none"
                  focusable={false}
                  height="25"
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "flex": 0,
                        "height": 25,
                        "width": 26,
                      },
                    ]
                  }
                  tintColor="#fafafa"
                  vbHeight={25}
                  vbWidth={26}
                  width="26"
                >
                  <RNSVGGroup
                    fill={null}
                    propList={
                      [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M2.39587 22.6562C2.39587 23.9502 3.44568 25 4.73962 25H21.9271C23.2211 25 24.2709 23.9502 24.2709 22.6562V9.375H2.39587V22.6562ZM5.52087 13.2812C5.52087 12.8516 5.87244 12.5 6.30212 12.5H10.9896C11.4193 12.5 11.7709 12.8516 11.7709 13.2812V17.9688C11.7709 18.3984 11.4193 18.75 10.9896 18.75H6.30212C5.87244 18.75 5.52087 18.3984 5.52087 17.9688V13.2812ZM21.9271 3.125H19.5834V0.78125C19.5834 0.351562 19.2318 0 18.8021 0H17.2396C16.8099 0 16.4584 0.351562 16.4584 0.78125V3.125H10.2084V0.78125C10.2084 0.351562 9.85681 0 9.42712 0H7.86462C7.43494 0 7.08337 0.351562 7.08337 0.78125V3.125H4.73962C3.44568 3.125 2.39587 4.1748 2.39587 5.46875V7.8125H24.2709V5.46875C24.2709 4.1748 23.2211 3.125 21.9271 3.125Z"
                      fill={
                        {
                          "type": 2,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <Text
                  style={
                    [
                      {
                        "fontFamily": "RalewayRegular",
                        "fontSize": 16,
                      },
                      {
                        "color": "#fafafa",
                      },
                      {
                        "fontWeight": 400,
                      },
                      undefined,
                    ]
                  }
                >
                  Today
                </Text>
              </View>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "flex": 1,
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  [
                    [
                      {
                        "alignItems": "center",
                        "backgroundColor": "#262626",
                        "borderColor": "#262626",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "flex": 1,
                        "gap": 8,
                        "justifyContent": "center",
                        "padding": 16,
                      },
                    ],
                    {
                      "flexDirection": "column",
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight="25"
                  bbWidth="26"
                  color="#fafafa"
                  fill="none"
                  focusable={false}
                  height="25"
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "flex": 0,
                        "height": 25,
                        "width": 26,
                      },
                    ]
                  }
                  tintColor="#fafafa"
                  vbHeight={25}
                  vbWidth={26}
                  width="26"
                >
                  <RNSVGGroup
                    fill={null}
                    propList={
                      [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M2.0625 22.6562C2.0625 23.9502 3.1123 25 4.40625 25H21.5938C22.8877 25 23.9375 23.9502 23.9375 22.6562V9.375H2.0625V22.6562ZM5.1875 13.2812C5.1875 12.8516 5.53906 12.5 5.96875 12.5H20.0312C20.4609 12.5 20.8125 12.8516 20.8125 13.2812V16.4062C20.8125 16.8359 20.4609 17.1875 20.0312 17.1875H5.96875C5.53906 17.1875 5.1875 16.8359 5.1875 16.4062V13.2812ZM21.5938 3.125H19.25V0.78125C19.25 0.351562 18.8984 0 18.4688 0H16.9062C16.4766 0 16.125 0.351562 16.125 0.78125V3.125H9.875V0.78125C9.875 0.351562 9.52344 0 9.09375 0H7.53125C7.10156 0 6.75 0.351562 6.75 0.78125V3.125H4.40625C3.1123 3.125 2.0625 4.1748 2.0625 5.46875V7.8125H23.9375V5.46875C23.9375 4.1748 22.8877 3.125 21.5938 3.125Z"
                      fill={
                        {
                          "type": 2,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <Text
                  style={
                    [
                      {
                        "fontFamily": "RalewayRegular",
                        "fontSize": 16,
                      },
                      {
                        "color": "#fafafa",
                      },
                      {
                        "fontWeight": 400,
                      },
                      undefined,
                    ]
                  }
                >
                  Tomorrow
                </Text>
              </View>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "flex": 1,
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  [
                    [
                      {
                        "alignItems": "center",
                        "backgroundColor": "#262626",
                        "borderColor": "#262626",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "flex": 1,
                        "gap": 8,
                        "justifyContent": "center",
                        "padding": 16,
                      },
                    ],
                    {
                      "flexDirection": "column",
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight="25"
                  bbWidth="26"
                  color="#fafafa"
                  fill="none"
                  focusable={false}
                  height="25"
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "flex": 0,
                        "height": 25,
                        "width": 26,
                      },
                    ]
                  }
                  tintColor="#fafafa"
                  vbHeight={25}
                  vbWidth={26}
                  width="26"
                >
                  <RNSVGGroup
                    fill={null}
                    propList={
                      [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M1.72913 22.6562C1.72913 23.9502 2.77893 25 4.07288 25H21.2604C22.5543 25 23.6041 23.9502 23.6041 22.6562V9.375H1.72913V22.6562ZM17.3541 13.0859C17.3541 12.7637 17.6178 12.5 17.9401 12.5H19.8932C20.2155 12.5 20.4791 12.7637 20.4791 13.0859V15.0391C20.4791 15.3613 20.2155 15.625 19.8932 15.625H17.9401C17.6178 15.625 17.3541 15.3613 17.3541 15.0391V13.0859ZM17.3541 19.3359C17.3541 19.0137 17.6178 18.75 17.9401 18.75H19.8932C20.2155 18.75 20.4791 19.0137 20.4791 19.3359V21.2891C20.4791 21.6113 20.2155 21.875 19.8932 21.875H17.9401C17.6178 21.875 17.3541 21.6113 17.3541 21.2891V19.3359ZM11.1041 13.0859C11.1041 12.7637 11.3678 12.5 11.6901 12.5H13.6432C13.9655 12.5 14.2291 12.7637 14.2291 13.0859V15.0391C14.2291 15.3613 13.9655 15.625 13.6432 15.625H11.6901C11.3678 15.625 11.1041 15.3613 11.1041 15.0391V13.0859ZM11.1041 19.3359C11.1041 19.0137 11.3678 18.75 11.6901 18.75H13.6432C13.9655 18.75 14.2291 19.0137 14.2291 19.3359V21.2891C14.2291 21.6113 13.9655 21.875 13.6432 21.875H11.6901C11.3678 21.875 11.1041 21.6113 11.1041 21.2891V19.3359ZM4.85413 13.0859C4.85413 12.7637 5.1178 12.5 5.44006 12.5H7.39319C7.71545 12.5 7.97913 12.7637 7.97913 13.0859V15.0391C7.97913 15.3613 7.71545 15.625 7.39319 15.625H5.44006C5.1178 15.625 4.85413 15.3613 4.85413 15.0391V13.0859ZM4.85413 19.3359C4.85413 19.0137 5.1178 18.75 5.44006 18.75H7.39319C7.71545 18.75 7.97913 19.0137 7.97913 19.3359V21.2891C7.97913 21.6113 7.71545 21.875 7.39319 21.875H5.44006C5.1178 21.875 4.85413 21.6113 4.85413 21.2891V19.3359ZM21.2604 3.125H18.9166V0.78125C18.9166 0.351562 18.5651 0 18.1354 0H16.5729C16.1432 0 15.7916 0.351562 15.7916 0.78125V3.125H9.54163V0.78125C9.54163 0.351562 9.19006 0 8.76038 0H7.19788C6.76819 0 6.41663 0.351562 6.41663 0.78125V3.125H4.07288C2.77893 3.125 1.72913 4.1748 1.72913 5.46875V7.8125H23.6041V5.46875C23.6041 4.1748 22.5543 3.125 21.2604 3.125Z"
                      fill={
                        {
                          "type": 2,
                        }
                      }
                      propList={
                        [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <Text
                  style={
                    [
                      {
                        "fontFamily": "RalewayRegular",
                        "fontSize": 16,
                      },
                      {
                        "color": "#fafafa",
                      },
                      {
                        "fontWeight": 400,
                      },
                      undefined,
                    ]
                  }
                >
                  Custom
                </Text>
              </View>
            </View>
          </View>
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={1}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#262626",
                    "flexDirection": "row",
                    "gap": 8,
                    "paddingHorizontal": 24,
                    "paddingVertical": 16,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": false,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "borderColor": "#657786",
                        "borderRadius": 2,
                        "borderWidth": 2,
                        "height": 20,
                        "width": 20,
                      },
                      {
                        "borderRadius": 4,
                      },
                      false,
                      {
                        "backgroundColor": undefined,
                        "borderColor": "#A3A3A3",
                      },
                      undefined,
                      false,
                    ]
                  }
                />
                <Text
                  aria-label="To Buy"
                  style={
                    [
                      {
                        "fontFamily": "PoppinsRegular",
                        "fontSize": 16,
                        "lineHeight": 24,
                      },
                      {
                        "color": "#fafafa",
                      },
                      {
                        "fontWeight": 400,
                      },
                      undefined,
                    ]
                  }
                >
                  To Buy
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            {
              "marginTop": 24,
              "paddingBottom": 16,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "borderRadius": 100,
                    "justifyContent": "center",
                    "padding": 16,
                  },
                  {
                    "backgroundColor": "#FEF9C3",
                  },
                ]
              }
            >
              <Text
                style={
                  [
                    {
                      "fontFamily": "RalewayBold",
                      "fontSize": 16,
                      "fontWeight": 700,
                    },
                    {
                      "color": "#fafafa",
                    },
                    {
                      "fontWeight": 400,
                    },
                    [
                      {
                        "color": "#171717",
                      },
                      {
                        "fontWeight": "bold",
                      },
                    ],
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>,
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "bottom": 120,
        "flex": 1,
        "left": 0,
        "opacity": 0,
        "pointerEvents": "none",
        "position": "absolute",
        "right": 0,
        "transform": [
          {
            "translateY": 100,
          },
        ],
        "zIndex": 999,
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "#FEE2E2",
            "borderRadius": 8,
            "elevation": 8,
            "flexDirection": "row",
            "height": 56,
            "justifyContent": "space-between",
            "marginHorizontal": 16,
            "padding": 16,
            "shadowColor": "#171717",
            "shadowOffset": {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.15,
          },
          {
            "backgroundColor": "#FEE2E2",
          },
        ]
      }
    >
      <Text
        style={
          [
            {
              "fontFamily": "RalewayRegular",
              "fontSize": 16,
            },
            {
              "color": "#fafafa",
            },
            {
              "fontWeight": 400,
            },
            [
              {
                "color": "#171717",
              },
            ],
          ]
        }
      />
    </View>
  </View>,
]
`;
